name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build all Docker services with cache
      run: |
        docker buildx build \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
          -f services/auth-service/Dockerfile -t auth-service:latest ./services/auth-service

        docker buildx build \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
          -f services/game-service/Dockerfile -t game-service:latest ./services/game-service

        docker buildx build \
          --cache-from=type=local,src=/tmp/.buildx-cache \
          --cache-to=type=local,dest=/tmp/.buildx-cache-new,mode=max \
          -f gateway/Dockerfile -t gateway:latest ./gateway

        # Ajoute ici d'autres services si besoin

        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Start all services
      run: docker compose up -d

    - name: Wait for gateway to be ready
      run: |
        for i in {1..10}; do
          if curl -f http://localhost:8080/auth; then
            echo "Gateway is up!"
            break
          fi
          echo "Waiting for gateway..."
          sleep 5
        done

    - name: Install k6 load testing tool
      run: |
        sudo apt-get update
        sudo apt-get install -y gnupg software-properties-common curl
        curl -s https://dl.k6.io/key.gpg | sudo apt-key add -
        echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install -y k6

    - name: Run load test with k6
      run: |
        echo '
        import http from "k6/http";
        import { check, sleep } from "k6";

        export let options = {
          vus: 20,
          duration: "30s",
        };

        export default function () {
          let res = http.get("http://localhost:8080/auth");
          check(res, { "status is 200": (r) => r.status === 200 });
          sleep(1);
        }
        ' > loadtest.js

        k6 run loadtest.js

    - name: Stop services
      run: docker compose down
